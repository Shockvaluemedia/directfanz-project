{
  "name": "directfanz-project",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "tsx server.ts",
    "dev:next": "next dev",
    "build": "next build",
    "start": "NODE_ENV=production tsx server.ts",
    "start:next": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "tsx prisma/seed.ts",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "lint:types": "tsc --noEmit --pretty",
    "lint:fix": "next lint --fix",
    "lint:all": "npm run type-check && npm run lint",
    "quality:check": "npm run lint:all && npm run test",
    "quality:fix": "npm run lint:fix",
    "format": "prettier --write . --ignore-path .gitignore",
    "format:check": "prettier --check . --ignore-path .gitignore",
    "clean": "rm -rf .next out dist node_modules/.cache",
    "security:check": "node scripts/security-check.js",
    "validate:secrets": "node scripts/validate-secrets.js",
    "validate:env": "node -r dotenv/config scripts/validate-environment.cjs",
    "security:monitor": "node scripts/security-monitoring.cjs",
    "security:monitor:deps": "node scripts/security-monitoring.cjs deps",
    "security:monitor:system": "node scripts/security-monitoring.cjs system",
    "security:monitor:report": "node scripts/security-monitoring.cjs report",
    "staging:health": "node scripts/monitoring/staging-health.js once",
    "staging:monitor": "node scripts/monitoring/staging-health.js monitor",
    "staging:security": "node scripts/security-monitoring.cjs full",
    "prebuild": "echo 'Skipping prebuild checks for development build'",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:load": "node scripts/load-test.js",
    "test:system": "node scripts/system-test.js",
    "test:integration": "playwright test e2e/integration-test.spec.ts",
    "test:smoke": "node scripts/smoke-test.js",
    "test:ai-endpoints": "node scripts/test-ai-endpoints.cjs",
    "validate:ai-structure": "node scripts/validate-ai-structure.cjs",
    "validate:frontend": "node scripts/validate-frontend-integration.cjs",
    "validate:deployment": "node scripts/validate-deployment-readiness.cjs",
    "verify:all": "npm run test && npm run test:e2e && npm run test:system && npm run security:check",
    "deploy:setup": "node scripts/ci-cd-setup.js",
    "deploy:vercel": "node scripts/deploy.js",
    "deploy:aws": "node scripts/aws-deploy.js",
    "deploy:docker": "./scripts/docker-deploy.sh",
    "deploy:rollback": "./scripts/docker-rollback.sh",
    "infrastructure:init": "cd infrastructure/terraform && terraform init",
    "infrastructure:plan": "cd infrastructure/terraform && terraform plan",
    "infrastructure:apply": "cd infrastructure/terraform && terraform apply",
    "infrastructure:destroy": "cd infrastructure/terraform && terraform destroy",
    "monitoring:setup": "node scripts/monitoring-setup.js",
    "monitoring:start": "docker compose -f docker-compose.monitoring.yml up -d",
    "monitoring:stop": "docker compose -f docker-compose.monitoring.yml down",
    "monitoring:logs": "docker compose -f docker-compose.monitoring.yml logs -f",
    "backup:db": "node scripts/backup-restore.js",
    "backup:files": "node scripts/backup-restore.js",
    "backup:full": "node scripts/backup-restore.js",
    "backup:restore": "node scripts/backup-restore.js",
    "backup:automated": "./scripts/backup-system.sh full",
    "backup:cleanup": "./scripts/backup-system.sh cleanup",
    "backup:list": "./scripts/backup-system.sh list",
    "backup:code": "./scripts/backup-system.sh code",
    "backup:database": "./scripts/backup-system.sh database",
    "perf:baseline": "node scripts/performance-baseline.js",
    "perf:test": "node scripts/performance-test-suite.js",
    "perf:test:quick": "PERF_ITERATIONS=3 PERF_CONCURRENCY=2 PERF_LOAD_DURATION=10 node scripts/performance-test-suite.js",
    "perf:test:full": "PERF_ITERATIONS=10 PERF_CONCURRENCY=5 PERF_LOAD_DURATION=30 node scripts/performance-test-suite.js",
    "perf:monitor": "node -e \"console.log('Performance monitoring is active via middleware. Check logs or /api/admin/performance/health');\"",
    "perf:export": "node -e \"import('./lib/database-monitoring.js').then(({dbMonitor}) => dbMonitor.exportMetrics().then(path => console.log('Exported to:', path)));\"",
    "perf:reset": "node -e \"import('./lib/database-monitoring.js').then(({dbMonitor}) => { dbMonitor.resetMetrics(); console.log('Metrics reset'); });\"",
    "perf:validate": "node scripts/validate-performance-improvements.js",
    "perf:health": "curl -s https://www.directfanz-project.io/api/admin/performance/health | jq",
    "perf:alerts": "curl -s https://www.directfanz-project.io/api/admin/performance/alerts | jq",
    "health:check": "node scripts/project-health-check.js",
    "test:s3": "node scripts/test-s3-upload.js",
    "test:s3-direct": "node scripts/test-s3-direct.js",
    "production:setup": "npm run deploy:setup && npm run infrastructure:init && npm run monitoring:setup",
    "production:deploy": "npm run verify:all && npm run deploy:aws",
    "production:monitoring": "npm run monitoring:start",
    "production:backup": "npm run backup:full",
    "staging:deploy": "node scripts/deploy-staging.js",
    "staging:quick": "vercel --build-env NODE_ENV=production",
    "sync": "node scripts/sync-environments.js",
    "sync:quick": "git pull && npm install && npm run db:generate",
    "sync:branch": "git fetch origin && git status",
    "cache:clear": "node -e \"import('./src/lib/redis.js').then(({deleteCachedPattern}) => deleteCachedPattern('*').then(() => console.log('Cache cleared')))\"",
    "cache:warm": "node scripts/warm-cache.js",
    "health:check:all": "node scripts/health-check-all.js",
    "deploy:status": "node scripts/deployment-status.js",
    "quick-launch": "node scripts/quick-launch.cjs",
    "demo:ai-features": "node scripts/demo-ai-features.cjs",
    "test:openai": "node scripts/test-openai-integration.cjs"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.470.0",
    "@aws-sdk/lib-storage": "^3.893.0",
    "@aws-sdk/s3-request-presigner": "^3.470.0",
    "@ffmpeg/ffmpeg": "^0.12.15",
    "@heroicons/react": "^2.2.0",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@prisma/client": "^6.16.1",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.15",
    "@sendgrid/mail": "^8.1.5",
    "@sentry/nextjs": "^10.12.0",
    "@tanstack/react-query": "^4.41.0",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/mime-types": "^3.0.1",
    "@types/multer": "^2.0.0",
    "@types/react-beautiful-dnd": "^13.1.8",
    "@types/serviceworker": "^0.0.153",
    "@types/simple-peer": "^9.11.8",
    "@types/socket.io": "^3.0.1",
    "@types/socket.io-client": "^1.4.36",
    "@types/uuid": "^10.0.0",
    "@types/video.js": "^7.3.58",
    "@types/ws": "^8.18.1",
    "algoliasearch": "^5.37.0",
    "autoprefixer": "^10.4.16",
    "bcryptjs": "^2.4.3",
    "buffer": "^6.0.3",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "crypto-browserify": "^3.12.1",
    "date-fns": "^4.1.0",
    "ffmpeg-static": "^5.2.0",
    "ffprobe-static": "^3.1.0",
    "fluent-ffmpeg": "^2.1.3",
    "formidable": "^3.5.4",
    "framer-motion": "^10.18.0",
    "fuse.js": "^7.1.0",
    "glob": "^11.0.3",
    "hls.js": "^1.6.12",
    "ioredis": "^5.7.0",
    "isomorphic-dompurify": "^2.26.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.544.0",
    "mime-types": "^3.0.1",
    "multer": "^2.0.2",
    "next": "^14.2.32",
    "next-auth": "^4.24.11",
    "next-pwa": "^5.6.0",
    "nextjs-cors": "^2.2.0",
    "node-fetch": "^2.7.0",
    "nodemailer": "^6.9.14",
    "peer": "^1.0.2",
    "postcss": "^8.4.32",
    "prom-client": "^15.1.0",
    "react": "^18",
    "react-beautiful-dnd": "^13.1.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18",
    "react-dropzone": "^14.3.8",
    "react-hot-toast": "^2.6.0",
    "recharts": "^3.2.1",
    "redis": "^5.8.2",
    "sharp": "^0.34.4",
    "simple-peer": "^9.11.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "sonner": "^2.0.7",
    "stream-browserify": "^3.0.0",
    "stripe": "^18.5.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.3.6",
    "uuid": "^13.0.0",
    "validator": "^13.15.15",
    "video.js": "^8.23.4",
    "workbox-webpack-plugin": "^7.3.0",
    "ws": "^8.18.3",
    "zod": "^3.22.4",
    "zustand": "^4.5.7"
  },
  "devDependencies": {
    "@playwright/test": "^1.54.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/ioredis": "^4.28.10",
    "@types/node": "^20",
    "@types/nodemailer": "^7.0.1",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/validator": "^13.15.3",
    "commander": "^14.0.0",
    "dotenv": "^17.2.2",
    "eslint": "^8",
    "eslint-config-next": "14.0.4",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^30.0.4",
    "pg": "^8.16.3",
    "prettier": "^3.6.2",
    "prisma": "^6.16.1",
    "tsx": "^4.6.2",
    "typescript": "^5"
  }
}
